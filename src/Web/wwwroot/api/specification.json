{
  "x-generator": "NSwag v14.2.0.0 (NJsonSchema v11.1.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "ProjectTemplate API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/web/AuthUser/Login": {
      "post": {
        "tags": [
          "auth_user"
        ],
        "operationId": "Login",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/web/AuthUser/RefreshToken": {
      "post": {
        "tags": [
          "auth_user"
        ],
        "operationId": "RefreshToken",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponseModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/web/AuthUser/Logout": {
      "delete": {
        "tags": [
          "auth_user"
        ],
        "operationId": "Logout",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/web/ManageUsers/GetUsers": {
      "post": {
        "tags": [
          "manage_users"
        ],
        "operationId": "GetUsers",
        "requestBody": {
          "x-name": "filter",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserFilterQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageListOfUserDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/web/ManageUsers/CreateUser": {
      "post": {
        "tags": [
          "manage_users"
        ],
        "operationId": "CreateUser",
        "requestBody": {
          "x-name": "createUserCommand",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/api/web/ManageUsers/RemoveUser": {
      "delete": {
        "tags": [
          "manage_users"
        ],
        "operationId": "RemoveUser",
        "requestBody": {
          "x-name": "removeUser",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/api/web/Roles/CreateRole": {
      "post": {
        "tags": [
          "roles"
        ],
        "operationId": "CreateRole",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/api/web/Roles/UpdateRole": {
      "put": {
        "tags": [
          "roles"
        ],
        "operationId": "UpdateRole",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/api/web/Roles/DeleteRole": {
      "delete": {
        "tags": [
          "roles"
        ],
        "operationId": "DeleteRole",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRoleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/api/web/Roles/GetRoleDetails": {
      "get": {
        "tags": [
          "roles"
        ],
        "operationId": "GetRoleDetails",
        "parameters": [
          {
            "name": "roleId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDetailsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/web/Roles/GetRoles": {
      "post": {
        "tags": [
          "roles"
        ],
        "operationId": "GetRoles",
        "requestBody": {
          "x-name": "filterQueryFilterQueryRequest",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetRolesFilterQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageListOfRoleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/web/TestRedisCache/GetValue": {
      "get": {
        "tags": [
          "test_redis_cache"
        ],
        "operationId": "GetValue",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        }
      }
    },
    "/api/web/TestRedisCache/SetValue": {
      "post": {
        "tags": [
          "test_redis_cache"
        ],
        "operationId": "SetValue",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "value",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonValue"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/web/TestRedisCache/RemoveValue": {
      "delete": {
        "tags": [
          "test_redis_cache"
        ],
        "operationId": "RemoveValue",
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {}
            }
          },
          "204": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "TokenResponseModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "accessTokenExpiration": {
            "type": "string",
            "format": "date-time"
          },
          "refreshTokenExpiration": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LoginCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RefreshTokenCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "LogoutCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "PageListOfUserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "pageTotal": {
            "type": "integer",
            "format": "int32"
          },
          "filteredTotal": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDto"
            }
          }
        }
      },
      "UserDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "patronymic": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "failedLoginAttempts": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetUserFilterQuery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "FilterRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterSort"
            }
          },
          "filter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            }
          }
        }
      },
      "FilterSort": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBaseOfZorroSortEnum"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "FilterBaseOfZorroSortEnum": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/ZorroSortEnum"
          }
        }
      },
      "ZorroSortEnum": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Asc",
          "Desc"
        ],
        "enum": [
          0,
          1
        ]
      },
      "FilterObject": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBaseOfObject"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "FilterBaseOfObject": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "nullable": true
          }
        }
      },
      "CreateUserCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "patronymic": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RemoveUserCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateRoleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumPermission"
            }
          }
        }
      },
      "EnumPermission": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "CreateRole",
          "UpdateRole",
          "DeleteRole",
          "GetRole",
          "CreateUser",
          "UpdateUser",
          "DeleteUser",
          "GetUser"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ]
      },
      "UpdateRoleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnumPermission"
            }
          }
        }
      },
      "DeleteRoleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "roleId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RoleDetailsDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              },
              "permissions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "BaseAuditDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PageListOfRoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "pageTotal": {
            "type": "integer",
            "format": "int32"
          },
          "filteredTotal": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDto"
            }
          }
        }
      },
      "RoleDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAuditDto"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "GetRolesFilterQuery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterRequest"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "JsonValue": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JsonNode"
          },
          {
            "type": "object",
            "description": "Represents a mutable JSON value.",
            "x-abstract": true,
            "additionalProperties": false
          }
        ]
      },
      "JsonNode": {
        "type": "object",
        "description": "The base class that represents a single node within a mutable JSON document.",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "underlyingElement": {
            "nullable": true
          },
          "options": {
            "description": "Gets the options to control the behavior.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNodeOptions"
              }
            ]
          },
          "parent": {
            "description": "Gets the parent JsonNode.\n              If there is no parent, null is returned.\n              A parent can either be a JsonObject or a JsonArray.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNode"
              }
            ]
          },
          "root": {
            "description": "Gets the root JsonNode.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/JsonNode"
              }
            ]
          }
        }
      },
      "JsonNodeOptions": {
        "type": "object",
        "description": "Options to control JsonNode behavior.",
        "additionalProperties": false,
        "properties": {
          "propertyNameCaseInsensitive": {
            "type": "boolean",
            "description": "Gets or sets a value that indicates whether property names on JsonObject are case insensitive."
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}